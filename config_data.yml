
# This config file is for use with the `build_data` and `check_data` functions,
# which are helpers for implementations of Open SDG. This file allows easy use
# of those functions without altering Python code.

# The following should be changed according to the hosting environment. In the most
# common environment, Github Pages, you would need to set this according to the name
# of this repository, after a preceding slash. Eg: /my-repository-name
docs_baseurl: /open-sdg-tijuana

# Languages
# ---------
# This tells sdg-build to perform "translated builds" for each of the specified
# languages. Each build is in its own subfolder - one for each language.
languages:
  - es
  - en


# Destination directory
# ---------------------
# This identifies a directory to hold the "built" files. The default is '_site'.
# Here we use '_build' to avoid conflicting with Jekyll, which uses '_site'.
site_dir: _build

# Schema file
# -----------
# This identifies a file containing the schema (possible fields) for metadata.
# Currently this needs to be a prose.io config, and defaults to '_prose.yml'.
schema_file: metadata_schema.yml

# Source directory
# ----------------
# This identifies the directory that holds the 'data' and 'meta' folders.
# The default, '', points to the root of this repository.
src_dir: ''

# Inputs
# ------
# The allows control over the inputs of data and metadata. This can be omitted
# if you are using the standard Open SDG approach of CSV data and YAML metadata.
# But if you would like to use non-standard inputs (such as SDMX) then you can
# use this as needed.
#
# Each item must have a "class" which corresponds to classes in the sdg/inputs
# folder. Further, each item can have any/all of the parameters that class uses.
# The defaults below show what is used when this is omitted.
inputs:
  # - class: InputCsvData
  #   # This describes the data files, relative to the "src_dir" indicated above.
  #   path_pattern: data/*-*.csv  #se elimina en la extraccion del api 
  - class: InputYamlMeta
    path_pattern: indicator-config/*-*.yml
    git: false
  - class: InputYamlMeta
    # This describes the meta files, relative to the "src_dir" indicated above.
    path_pattern: meta/*-*.yml
    # This specifies whether or not to use Git to calculate the "last updated"
    # dates for data files.
    git: true
    # This specifies an alternate folder to look in for Git-versioned data files,
    # when calculating the "last updated" dates for data files. This defaults to
    # "data" (the folder where the data files actually exist.) Most sites will not
    # need to change this setting. It is intended for sites where the data needs
    # to be "built" before being processed by sdg-build.
    git_data_dir: data
  #- class: InputSdmxMeta
  #  meta_suffix: __GLOBAL

  - class: InputSdmxMl_Structure
    source: https://nsiws-stable-camstat-live.officialstatistics.org/rest/data/KH_NIS,DF_SDG_KH,1.2/A..............
    dsd: https://nsiws-stable-camstat-live.officialstatistics.org/rest/dataflow/KH_NIS/DF_SDG_KH/1.2?references=all&detail=referencepartial
    import_codes: true
    import_names: true
    dimension_map:
      REF_AREA|KH: ''
    drop_singleton_dimensions: false
    drop_dimensions:
      - NATURE
      - OBS_STATUS
      - REPORTING_TYPE
      - SOURCE_DETAIL
      - TIME_DETAIL
      - UNIT_MULT
      - FREQ
    indicator_id_map:
      N_KH_030101_01: '3-1-1-1' 
    indicator_id_xpath: .//Name[@lang='en']
    indicator_name_xpath: .//Name[@lang='en']
    request_params:
      headers:
        User-Agent: Mozilla

# Translations
# ------------
# The allows control over the imported translations. This can be omitted if you
# are happy with the defaults. But if you are using custom translation repos
# or non-standard inputs (such as SDMX) then you can use this as needed.
#
# Each item must have a "class" which corresponds to classes in the sdg-build
# project. Further, each item can have any/all of the parameters that class uses.
# The defaults below show what is used when this is omitted.
translations:
  # This pulls in translations from a Git repository.
  - class: TranslationInputSdgTranslations
    source: https://github.com/open-sdg/sdg-translations.git
    tag: 2.3.0
  # This pulls in translations from a local 'translations' folder.
  - class: TranslationInputYaml
    source: translations

# Reporting status extra fields
# -----------------------------
# This allows the build to generate stats for reporting status by additional
# fields, beyond the default "status by goal" report.
reporting_status_extra_fields: []

# Map layers
# ----------
# This allows the build to generate one or more GeoJSON files to be used by
# Open SDG maps. The parameters available correspond to the OutputGeoJson class.
# See sdg/outputs/OutputGeoJson.py for more information. Uncomment the map_layers
# below and adjust if you would like to use the Open SDG mapping functionality.
# Note that the GeoJSON files can either be remote (as in the example below) or
# local, relative to the src_dir specified above.
map_layers:
#Country (https://geoportal.statistics.gov.uk/datasets/countries-december-2019-boundaries-uk-buc)
  - geojson_file: https://geoportal.statistics.gov.uk/datasets/e91dce8fd0f74a6a8ab1e61b3528deb5_0.geojson
    name_property: ctry19nm
    id_property: ctry19cd
    output_subfolder: country
    filename_prefix: indicator_
#Region (link: https://hub.arcgis.com/datasets/4fcca2a47fed4bfaa1793015a18537ac_4)
  - geojson_file: https://geoportal.statistics.gov.uk/datasets/5c945b8197394489ab1a743ab0064ec6_0.geojson
    name_property: rgn17nm
    id_property: rgn17cd
    output_subfolder: regions
    filename_prefix: indicator_
#Local Authority (link: https://hub.arcgis.com/datasets/686603e943f948acaa13fb5d2b0f1275_4)
  - geojson_file: https://geoportal.statistics.gov.uk/datasets/e462c8a5e18e4f99a4eb36e03eb11c36_0.geojson
    name_property: lad16nm
    id_property: lad16cd
    output_subfolder: local_authorities
    filename_prefix: indicator_

# Documentation settings
# ----------------------
# This controls the automatic documentation that is created for your build.
#
# This is the logo at the top of the automated documentation pages.
docs_branding: SDG data build documentation
# This displays at the top of the automated documentation homepage.
docs_intro: This is a list of examples of endpoints and output that are
  available on this service. Click each of the links below for more information
  on the available output.
docs_subfolder: data-docs
# This can be uncommented and updated so allow links to your indicator pages.
# The URL here should have [id] instead of the indicator ID.
#docs_indicator_url: https://my-github-org/my-site-repository/[id]
